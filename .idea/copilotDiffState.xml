<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="updatedContent" value="# AnyMeal&#10;&#10;A modern Android application for meal planning and recipe management, designed to help users discover, organize, and plan their meals efficiently. Built with Kotlin and Jetpack Compose for a seamless and intuitive user experience.&#10;&#10;## Main Features&#10;&#10;- **Recipe Discovery &amp; Search** – Browse and search through a comprehensive recipe database&#10;- **Meal Planning** – Create and manage weekly meal plans with ease&#10;- **Favorites Management** – Save and organize your favorite recipes&#10;- **Shopping List Generator** – Automatically generate shopping lists from meal plans&#10;- **User Profile Management** – Personalized user accounts with profile customization&#10;- **Achievement System** – Unlock achievements and track cooking milestones&#10;- **Dark/Light Theme** – Adaptive UI theme based on user preference&#10;- **User Authentication** – Secure login and registration system&#10;- **Recipe Details** – Detailed recipe information with ingredients and instructions&#10;&#10;## Technologies Used&#10;&#10;- **Kotlin** – Primary programming language&#10;- **Jetpack Compose** – Modern UI toolkit for native Android development&#10;- **Material Design 3** – Google's latest design system&#10;- **Dagger Hilt** – Dependency injection framework&#10;- **Retrofit** – HTTP client for API communication&#10;- **OkHttp** – Networking library with logging interceptor&#10;- **Navigation Compose** – Type-safe navigation for Compose&#10;- **Coil** – Image loading library for Compose&#10;- **Gson** – JSON serialization/deserialization&#10;- **ViewModel &amp; LiveData** – Architecture components for UI state management&#10;&#10;## Architecture &amp; Folder Structure&#10;&#10;The project follows **MVVM (Model-View-ViewModel)** architecture pattern with clean separation of concerns:&#10;&#10;```&#10;app/src/main/java/com/noskill/anymeal/&#10;├── data/              # Data layer (repositories, data sources)&#10;├── dto/               # Data Transfer Objects&#10;├── navigation/        # Navigation components and routing&#10;├── ui/&#10;│   ├── components/    # Reusable UI components&#10;│   ├── models/        # UI state models&#10;│   ├── screens/       # Compose screens&#10;│   └── theme/         # App theming and styling&#10;├── util/              # Utility classes and extensions&#10;├── viewmodel/         # ViewModels for business logic&#10;└── MainActivity.kt    # Main entry point&#10;```&#10;&#10;**Key Architecture Components:**&#10;- **ViewModels** – Handle business logic and UI state&#10;- **Repositories** – Abstract data access layer&#10;- **Compose Screens** – UI layer with declarative components&#10;- **Navigation Graph** – Centralized navigation management&#10;- **Dependency Injection** – Hilt for managing dependencies&#10;&#10;## Screenshots&#10;&#10;### Home &amp; Recipe Discovery&#10;![Home Screen](screenshots/home_screen.png)&#10;![Recipe Search](screenshots/recipe_search.png)&#10;&#10;### Meal Planning &amp; Lists&#10;![Meal Planner](screenshots/meal_planner.png)&#10;![Shopping List](screenshots/shopping_list.png)&#10;&#10;### User Profile &amp; Settings&#10;![Profile Screen](screenshots/profile_screen.png)&#10;![Dark Theme](screenshots/dark_theme.png)&#10;&#10;---&#10;&#10;*Developed as part of a university project showcasing modern Android development practices.*" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>